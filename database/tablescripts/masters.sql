CREATE TABLE <<SCHEMA_NAME>>.SD_TENANT
(
	TENANT_ID_N				NUMERIC(19,0) PRIMARY KEY NOT NULL,
	NAME_V					VARCHAR(255) NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT TENANT_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_STATUS
(
	STATUS_N					NUMERIC(19,0) PRIMARY KEY NOT NULL,
	NAME_V					VARCHAR(255),
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT STATUS_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_CURRENCY
(
	CURRENCY_V				VARCHAR(5) PRIMARY KEY NOT NULL,
	NAME_V					VARCHAR(255)  NOT NULL,
	NO_OF_DECIMALS_N		NUMERIC(2,0) NOT NULL DEFAULT 0,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	STATUS_N					NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT CURRENCY_TYPE_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);


CREATE TABLE <<SCHEMA_NAME>>.SD_ENTITY_TYPE
(
	ENTITY_TYPE_N				NUMERIC(19,0) PRIMARY KEY,
	NAME_V					VARCHAR(255),
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,    
	STATUS_N					NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

---------------------------------------------------------------

CREATE TABLE <<SCHEMA_NAME>>.SD_LIFECYCLE
(
	LIFECYCLE_ID_N			NUMERIC(19,0) PRIMARY KEY NOT NULL,
	NAME_V					VARCHAR(255) NOT NULL,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT LC_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_LIFECYCLE_OPERATIONS
(
	LIFECYCLE_ID_N			NUMERIC(19,0) NOT NULL REFERENCES <<SCHEMA_NAME>>.SD_LIFECYCLE,
	OPERATION_V				VARCHAR(255) NOT NULL,
	SOURCE_STATUS_N			NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	ALLOW_N					NUMERIC(1,0) NOT NULL,
		CONSTRAINT LC_EVENTS_ID_OPERATION_UNQ1 PRIMARY KEY(LIFECYCLE_ID_N, OPERATION_V, SOURCE_STATUS_N)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_LIFECYCLE_STATE_TRANSITION
(
	LIFECYCLE_ID_N			NUMERIC(19,0) NOT NULL REFERENCES <<SCHEMA_NAME>>.SD_LIFECYCLE,
	SOURCE_STATUS_N			NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	TARGET_STATUS_N			NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	ALLOW_N					NUMERIC(1,0) NOT NULL,
		CONSTRAINT LC_ST_ID_UNQ1 PRIMARY KEY(LIFECYCLE_ID_N, SOURCE_STATUS_N, TARGET_STATUS_N)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_LANGUAGE
(
	LANGUAGE_ID_V			VARCHAR(20) PRIMARY KEY,
	NAME_V					VARCHAR(255) NOT NULL,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	STATUS_N					NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT LANG_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

CREATE TABLE <<SCHEMA_NAME>>.MS_TAG_TYPE 
(
    	TAG_TYPE_ID_N				NUMERIC(19,0) PRIMARY KEY NOT NULL,
   	NAME_V					VARCHAR(255) NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	STATUS_N					NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT TAG_TYPE_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

--1	-  Market segment
--2	-  Image

CREATE TABLE <<SCHEMA_NAME>>.MS_TAG 
(
    	TAG_MASTER_ID_N			NUMERIC(19,0) PRIMARY KEY NOT NULL,
   	NAME_V					VARCHAR(255) NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	STATUS_N					NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_STATUS NOT NULL,
	TAG_TYPE_ID				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.MS_TAG_TYPE NOT NULL,
	TENANT_ID_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_TENANT NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT TAG_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

--1	- Indra nagar		- 1/1/2001 - 31/12/2099 -	1 - 1
--2	- Background image	- 1/1/2001 - 31/12/2099 -	1 - 2

CREATE TABLE <<SCHEMA_NAME>>.TR_TAGS  
(
	TAG_ID_N					NUMERIC(19,0) PRIMARY KEY NOT NULL,
	ENTITY_TYPE_N				NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_ENTITY_TYPE NOT NULL,
	ENTITY_ID_N				NUMERIC(19,0) NOT NULL,
	TAG_MASTER_ID_N			NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.MS_TAG NOT NULL,
	TAG_VALUE_V				VARCHAR(2000),
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT TAGS_UNQ1 UNIQUE (ENTITY_TYPE_N,ENTITY_ID_N,TAG_MASTER_ID_N)
);

--1	- 1001	- 1 - 1 -  -
--1	- 1001	- 2 - 2 - "Image name" - 

CREATE TABLE <<SCHEMA_NAME>>.SD_ENUMERATION_TYPE
(
	ENUMERATION_TYPE_ID_N	NUMERIC(19,0) PRIMARY KEY NOT NULL,
	NAME_V					VARCHAR(255) NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT ENUM_MAST_NAME_UNQ1 UNIQUE (NAME_V)
);

CREATE TABLE <<SCHEMA_NAME>>.SD_ENUMERATIONS
(
	ENUMERATION_TYPE_ID_N	NUMERIC(19,0) REFERENCES <<SCHEMA_NAME>>.SD_ENUMERATION_TYPE,
	ENUMERATION_ID_N		NUMERIC(19,0),
	NAME_V					VARCHAR(255) NOT NULL,
	START_DATE_DT			TIMESTAMP WITH TIME ZONE NOT NULL,
	END_DATE_DT				TIMESTAMP WITH TIME ZONE NOT NULL,
	LAST_UPDATED_TIME_DT	TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
		CONSTRAINT ENUMERATIONS_PKEY PRIMARY KEY (ENUMERATION_TYPE_ID_N, ENUMERATION_ID_N )
);


CREATE TABLE <<SCHEMA_NAME>>.REVISION_HISTORY
(
  ID INTEGER NOT NULL,
  TIMESTAMP BIGINT NOT NULL,
  USERNAME CHARACTER VARYING(255),
  CONSTRAINT REVISION_HISTORY_PKEY PRIMARY KEY (ID )
);

CREATE TABLE <<SCHEMA_NAME>>.REV_CHANGES
(
  REV INTEGER NOT NULL,
  ENTITY_NAME_V CHARACTER VARYING(255),
  CONSTRAINT FKBEF76F279F4CC368 FOREIGN KEY (REV)
      REFERENCES <<SCHEMA_NAME>>.REVISION_HISTORY (ID) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

